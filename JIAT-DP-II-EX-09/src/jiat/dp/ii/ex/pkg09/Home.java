/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jiat.dp.ii.ex.pkg09;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import sources.Axis;
import sources.Originator;

/**
 *
 * @author grays
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    Originator originator = new Originator();
    boolean playerActive = true;
    int playerY = 650;
    long startTime;

    public Home() {
        this.startTime = System.nanoTime();
        initComponents();
        setCustomFeatures();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lb_npcEnmyKing2 = new javax.swing.JLabel();
        lb_npcEnmyKing1 = new javax.swing.JLabel();
        lb_playerQueen = new javax.swing.JLabel();
        lb_npcKing = new javax.swing.JLabel();
        lb_backgroundChessBoard = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lb_msg = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_npcEnmyKing2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_npcEnmyKing2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/enmy_black.png"))); // NOI18N
        lb_npcEnmyKing2.setToolTipText("");
        lb_npcEnmyKing2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lb_npcEnmyKing2.setIconTextGap(0);
        jPanel1.add(lb_npcEnmyKing2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 90, 70));

        lb_npcEnmyKing1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_npcEnmyKing1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/enamy_red.png"))); // NOI18N
        lb_npcEnmyKing1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lb_npcEnmyKing1.setIconTextGap(0);
        jPanel1.add(lb_npcEnmyKing1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 90, 70));

        lb_playerQueen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_playerQueen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/icons8_queen_50px.png"))); // NOI18N
        lb_playerQueen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lb_playerQueen.setIconTextGap(0);
        jPanel1.add(lb_playerQueen, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 650, 90, 70));

        lb_npcKing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_npcKing.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/icons8_king_50px.png"))); // NOI18N
        lb_npcKing.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lb_npcKing.setIconTextGap(0);
        jPanel1.add(lb_npcKing, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 80, 70));

        lb_backgroundChessBoard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_backgroundChessBoard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/background.jpg"))); // NOI18N
        lb_backgroundChessBoard.setText("jLabel1");
        lb_backgroundChessBoard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_backgroundChessBoardMouseClicked(evt);
            }
        });
        jPanel1.add(lb_backgroundChessBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 800));

        jPanel2.setMinimumSize(new java.awt.Dimension(790, 50));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_msg.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        lb_msg.setText(" Move Queen to the King");
        jPanel2.add(lb_msg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 254, 50));

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 51));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/icons8_undo_20px.png"))); // NOI18N
        jButton2.setText("Undo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 4, -1, 44));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lb_backgroundChessBoardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_backgroundChessBoardMouseClicked
        if (playerActive) {
            lb_playerQueen.setLocation(new Point(evt.getX() - 25, evt.getY() - 25));
            Axis aixis = new Axis(lb_playerQueen.getX(), lb_playerQueen.getY());
            originator.setAixis(aixis);
            originator.save();
            playerY = lb_playerQueen.getY();
        }
        if (lb_npcEnmyKing2.getY() + 10 > playerY && lb_npcEnmyKing2.getY() - 10 < playerY) {
            lb_msg.setForeground(Color.red);
            lb_msg.setText("Queen Cought By Black King");
            playerActive = false;
            originator.clear();
            JOptionPane.showMessageDialog(this, "Game Over", "Notify", JOptionPane.INFORMATION_MESSAGE);
        }
        if (lb_npcEnmyKing1.getY() + 10 > lb_playerQueen.getY() && lb_npcEnmyKing1.getY() - 10 < lb_playerQueen.getY()) {
            lb_msg.setForeground(Color.red);
            lb_msg.setText("Queen Cought By Red King");
            playerActive = false;
            originator.clear();
            JOptionPane.showMessageDialog(this, "Game Over", "Notify", JOptionPane.INFORMATION_MESSAGE);
        }
        if (lb_npcKing.getY() + 10 > playerY && lb_npcKing.getY() - 10 < playerY) {
            long elapsedTime = (System.nanoTime() - startTime);
            lb_msg.setForeground(Color.red);
            lb_msg.setText("        You Win !!");
            playerActive = false;
            originator.clear();
            long convert = TimeUnit.SECONDS.convert(elapsedTime, TimeUnit.NANOSECONDS);
            JOptionPane.showMessageDialog(this, "You win the game in \n " + convert + " seconds", "Notify", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_lb_backgroundChessBoardMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        undoGame();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Home home = new Home();
                home.setVisible(true);
                home.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../../../../../Resources/ico.png")));
            }
        });
    }

    private void activeNPC(boolean b) {
        long speed = 100;
        Thread npc1 = new Thread(() -> {
            boolean swit = true;
            while (b) {
                try {
//                    System.out.println("x--1-- " + lb_npcEnmyKing1.getX());
                    Thread.sleep(speed);
                    if (lb_npcEnmyKing1.getX() < 631 && 60 != lb_npcEnmyKing1.getX() && !swit) {
                        lb_npcEnmyKing1.setLocation(new Point(lb_npcEnmyKing1.getX() - 60, lb_npcEnmyKing1.getY()));
                        if (lb_npcEnmyKing1.getX() == 30) {
                            swit = !swit;
                        }
                    }
                    if (swit) {

                        lb_npcEnmyKing1.setLocation(new Point(lb_npcEnmyKing1.getX() + 60, lb_npcEnmyKing1.getY()));
                        if (lb_npcEnmyKing1.getX() == 630 || lb_npcEnmyKing1.getX() > 631) {
                            swit = !swit;
                        }
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        Thread npc2 = new Thread(() -> {
            boolean swit = true;
            while (b) {
                try {
//                    System.out.println("x---- " + lb_npcEnmyKing2.getX());
                    Thread.sleep(speed);
                    if (lb_npcEnmyKing2.getX() < 631 && 60 != lb_npcEnmyKing2.getX() && !swit) {
                        lb_npcEnmyKing2.setLocation(new Point(lb_npcEnmyKing2.getX() - 60, lb_npcEnmyKing2.getY()));
                        if (lb_npcEnmyKing2.getX() == 30) {
                            swit = !swit;
                        }
                    }
                    if (swit) {
                        lb_npcEnmyKing2.setLocation(new Point(lb_npcEnmyKing2.getX() + 60, lb_npcEnmyKing2.getY()));
                        if (lb_npcEnmyKing2.getX() == 630) {
                            swit = !swit;
                        }
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        npc1.start();
        npc2.start();
    }

    private void setCustomFeatures() {
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource("../../../../../Resources/hand.png"));
        Cursor c = toolkit.createCustomCursor(image, new Point(lb_backgroundChessBoard.getX(),
                lb_backgroundChessBoard.getY()), "img");
        lb_backgroundChessBoard.setCursor(c);
        lb_npcKing.setCursor(c);
        lb_playerQueen.setCursor(c);
        activeNPC(true);
    }

    private void undoGame() {
        System.out.println("Undoing...");
        Axis undoAxis = originator.undoAxis();
        System.out.println(undoAxis);
        lb_msg.setForeground(Color.BLACK);
        lb_msg.setText(" Move Queen to the King");
        playerActive = true;
        if (undoAxis.getX() == 0 && undoAxis.getY() == 0) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Do you need to reset position ?", "Notify", JOptionPane.INFORMATION_MESSAGE);
            if (showConfirmDialog == 0) {
                startTime = System.nanoTime();
                lb_playerQueen.setLocation(new Point(630, 650));
            }
        } else {
            System.out.println("setting...");
            Point point = new Point(undoAxis.getX(), undoAxis.getY());
            lb_playerQueen.setLocation(point);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lb_backgroundChessBoard;
    private javax.swing.JLabel lb_msg;
    private javax.swing.JLabel lb_npcEnmyKing1;
    private javax.swing.JLabel lb_npcEnmyKing2;
    private javax.swing.JLabel lb_npcKing;
    private javax.swing.JLabel lb_playerQueen;
    // End of variables declaration//GEN-END:variables
}
