/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Sources.AbstarctSubFolder;
import Sources.CelleRender;
import Sources.Folder;
import Sources.SubFile;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author grays
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    DefaultTreeModel defaultTreeModel;
    DefaultMutableTreeNode root;
    Folder mainFolder;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        lb1 = new javax.swing.JLabel();
        SubSize = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        subName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        selectedFile = new javax.swing.JLabel();
        lb2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jTree1.setBackground(new java.awt.Color(102, 102, 102));
        jTree1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTree1.setForeground(new java.awt.Color(0, 0, 0));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Sample Folder");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setCellRenderer(new CelleRender());
        jTree1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        lb1.setForeground(new java.awt.Color(255, 255, 255));
        lb1.setText("Selected -");

        SubSize.setForeground(new java.awt.Color(0, 0, 0));
        SubSize.setEnabled(false);
        SubSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubSizeActionPerformed(evt);
            }
        });
        SubSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SubSizeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SubSizeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SubSizeKeyTyped(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Size");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Sub File Name");

        subName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subNameActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("High Tower Text", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mr. File Manager");

        selectedFile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        selectedFile.setForeground(new java.awt.Color(255, 255, 255));
        selectedFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectedFile.setText("No File");

        lb2.setForeground(new java.awt.Color(255, 255, 255));
        lb2.setText("Type - ");

        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Folder", "File" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GB", "MB" }));
        jComboBox2.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lb2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(subName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(SubSize, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lb1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(selectedFile, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(211, 211, 211)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 233, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 128, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectedFile)
                        .addComponent(lb1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(subName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(SubSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(lb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(342, 342, 342)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SubSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubSizeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double size;
        if (jComboBox2.getSelectedIndex() == 0) {
            size = Double.valueOf(SubSize.getText() == null || "".equals(SubSize.getText()) ? "0" : SubSize.getText()) > 0.0 ? Double.valueOf(SubSize.getText()) : 0.0;
            size = size * 1024;
        } else {
            size = Double.valueOf(SubSize.getText() == null || "".equals(SubSize.getText()) ? "0" : SubSize.getText()) > 0.0 ? Double.valueOf(SubSize.getText()) : 0.0;
        }
        if (!subName.getText().isEmpty() || !"".equals(subName.getText())) {
            if (root != null) {
                if (jTree1.getLastSelectedPathComponent() != null) {
                    if (jComboBox1.getSelectedIndex() == 0) {
                        SubSize.setEnabled(false);
                        jComboBox2.setEnabled(false);
                        if (jTree1.getLastSelectedPathComponent() instanceof Folder) {
                            Folder node = (Folder) jTree1.getLastSelectedPathComponent();
                            if (node != null) {
                                Folder s = new Folder();
                                s.setName(subName.getText());
                                s.setUserObject(subName.getText());
                                s.setSize(size);
                                node.add(s);
                                node.addSubfolder(s);
                                defaultTreeModel.reload();
                                SubSize.setText("");
                                subName.setText("");
                                selectedFile.setText("No File");
                            } else {
                                JOptionPane.showMessageDialog(this, "Files are not Selected", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Selected File is not a Folder", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        if (jTree1.getLastSelectedPathComponent() instanceof Folder) {
                            Folder node = (Folder) jTree1.getLastSelectedPathComponent();
                            if (node != null) {
                                SubFile s = new SubFile();
                                s.setName(subName.getText());
                                s.setUserObject(subName.getText());
                                s.setSize(size);
                                node.add(s);
                                node.addSubfolder(s);
                                defaultTreeModel.reload();
                                SubSize.setText("");
                                subName.setText("");
                                selectedFile.setText("No File");
                            } else {
                                JOptionPane.showMessageDialog(this, "Files are not Selected", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Selected File is not a SubFile", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Select a Folder to Add file", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                if (defaultTreeModel != null) {
                    Folder f = new Folder();
                    f.setName(subName.getText());
                    f.setSize(size);
                    f.setUserObject(subName.getText());
                    mainFolder.addSubfolder(f);
                    root.add(f);
                    defaultTreeModel.reload();
                } else {
                    mainFolder = new Folder();
                    mainFolder.setName(subName.getText());
                    mainFolder.setSize(size);
                    mainFolder.setUserObject(subName.getText());
                    root = mainFolder;
                    defaultTreeModel = new DefaultTreeModel(mainFolder);
                    jTree1.setModel(defaultTreeModel);
                }
                SubSize.setText("");
                subName.setText("");
                selectedFile.setText("No File");
                jComboBox1.setEnabled(true);
                SubSize.setEnabled(true);
                jComboBox2.setEnabled(true);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Sub File Name Field is empty", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        if (evt.getClickCount() == 2) {
            if (jTree1.getSelectionModel().getLeadSelectionPath() != null) {
                if (jTree1.getSelectionPath().getLastPathComponent() instanceof AbstarctSubFolder) {
                    AbstarctSubFolder node = (AbstarctSubFolder) jTree1.getSelectionPath().getLastPathComponent();
                    String size = "0";
                    if (node.getSize() > 1024.0) {
                        size = Math.round(node.getSize() / 1024) + "GB";
                    } else {
                        size = node.getSize() + "MB";
                    }
                    JOptionPane.showMessageDialog(this, "Total Size is " + size + " \n And Consits " + node.getCount() + " Files", "Notify", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Nothing Inside Sample Folder", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Select a File or Sub File to Display Info", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (defaultTreeModel != null) {
                AbstarctSubFolder node;
                if (jTree1.getLastSelectedPathComponent() != null) {
                    if (jTree1.getLastSelectedPathComponent() instanceof SubFile) {
                        node = (SubFile) jTree1.getLastSelectedPathComponent();
                    } else {
                        node = (Folder) jTree1.getLastSelectedPathComponent();
                    }
                    selectedFile.setText(node.getName());
                }
            }
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void subNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subNameActionPerformed

    private void SubSizeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SubSizeKeyReleased

        // TODO add your handling code here:
    }//GEN-LAST:event_SubSizeKeyReleased

    private void SubSizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SubSizeKeyPressed
    }//GEN-LAST:event_SubSizeKeyPressed

    private void SubSizeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SubSizeKeyTyped

    }//GEN-LAST:event_SubSizeKeyTyped

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedIndex() == 0) {
            SubSize.setEnabled(false);
            jComboBox2.setEnabled(false);
        } else {
            SubSize.setEnabled(true);
            jComboBox2.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Home home = new Home();
                home.setVisible(true);
                home.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../Resources/ico.png")));
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SubSize;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lb1;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel selectedFile;
    private javax.swing.JTextField subName;
    // End of variables declaration//GEN-END:variables
}
